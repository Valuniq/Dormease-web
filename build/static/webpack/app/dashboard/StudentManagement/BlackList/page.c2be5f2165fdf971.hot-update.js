"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/StudentManagement/BlackList/page",{

/***/ "(app-pages-browser)/./src/app/dashboard/StudentManagement/BlackList/mockData.tsx":
/*!********************************************************************!*\
  !*** ./src/app/dashboard/StudentManagement/BlackList/mockData.tsx ***!
  \********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mockBlackList: function() { return /* binding */ mockBlackList; }\n/* harmony export */ });\nconst mockBlackList = [\n    {\n        index: 1,\n        name: \"강승우\",\n        studentId: \"123456\",\n        phoneNumber: \"010-1234-5678\",\n        minus: \"10\",\n        reason: \"Misbehavior\",\n        registrationDate: \"2024-01-01\",\n        isChecked: false,\n        setReason: ()=>{},\n        setIsChecked: ()=>{},\n        isEdit: false\n    },\n    {\n        index: 2,\n        name: \"이보현\",\n        studentId: \"654321\",\n        phoneNumber: \"010-8765-4321\",\n        minus: \"15\",\n        reason: \"Late to class\",\n        registrationDate: \"2024-01-02\",\n        isChecked: false,\n        setReason: ()=>{},\n        setIsChecked: ()=>{},\n        isEdit: false\n    },\n    // ... 나머지 데이터 동일하게 수정\n    {\n        index: 10,\n        name: \"이보현\",\n        studentId: \"654321\",\n        phoneNumber: \"010-8765-4321\",\n        minus: \"15\",\n        reason: \"Late to class\",\n        registrationDate: \"2024-01-02\",\n        isChecked: false,\n        setReason: ()=>{},\n        setIsChecked: ()=>{},\n        isEdit: false\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZGFzaGJvYXJkL1N0dWRlbnRNYW5hZ2VtZW50L0JsYWNrTGlzdC9tb2NrRGF0YS50c3giLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLGdCQUFnQjtJQUMzQjtRQUNFQyxPQUFPO1FBQ1BDLE1BQU07UUFDTkMsV0FBVztRQUNYQyxhQUFhO1FBQ2JDLE9BQU87UUFDUEMsUUFBUTtRQUNSQyxrQkFBa0I7UUFDbEJDLFdBQVc7UUFDWEMsV0FBVyxLQUFPO1FBQ2xCQyxjQUFjLEtBQU87UUFDckJDLFFBQVE7SUFDVjtJQUNBO1FBQ0VWLE9BQU87UUFDUEMsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLGFBQWE7UUFDYkMsT0FBTztRQUNQQyxRQUFRO1FBQ1JDLGtCQUFrQjtRQUNsQkMsV0FBVztRQUNYQyxXQUFXLEtBQU87UUFDbEJDLGNBQWMsS0FBTztRQUNyQkMsUUFBUTtJQUNWO0lBQ0Esc0JBQXNCO0lBQ3RCO1FBQ0VWLE9BQU87UUFDUEMsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLGFBQWE7UUFDYkMsT0FBTztRQUNQQyxRQUFRO1FBQ1JDLGtCQUFrQjtRQUNsQkMsV0FBVztRQUNYQyxXQUFXLEtBQU87UUFDbEJDLGNBQWMsS0FBTztRQUNyQkMsUUFBUTtJQUNWO0NBQ0QsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBwL2Rhc2hib2FyZC9TdHVkZW50TWFuYWdlbWVudC9CbGFja0xpc3QvbW9ja0RhdGEudHN4PzM4ZGEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IG1vY2tCbGFja0xpc3QgPSBbXHJcbiAge1xyXG4gICAgaW5kZXg6IDEsXHJcbiAgICBuYW1lOiAn6rCV7Iq57JqwJyxcclxuICAgIHN0dWRlbnRJZDogJzEyMzQ1NicsXHJcbiAgICBwaG9uZU51bWJlcjogJzAxMC0xMjM0LTU2NzgnLFxyXG4gICAgbWludXM6ICcxMCcsXHJcbiAgICByZWFzb246ICdNaXNiZWhhdmlvcicsXHJcbiAgICByZWdpc3RyYXRpb25EYXRlOiAnMjAyNC0wMS0wMScsXHJcbiAgICBpc0NoZWNrZWQ6IGZhbHNlLFxyXG4gICAgc2V0UmVhc29uOiAoKSA9PiB7fSxcclxuICAgIHNldElzQ2hlY2tlZDogKCkgPT4ge30sXHJcbiAgICBpc0VkaXQ6IGZhbHNlLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaW5kZXg6IDIsXHJcbiAgICBuYW1lOiAn7J2067O07ZiEJyxcclxuICAgIHN0dWRlbnRJZDogJzY1NDMyMScsXHJcbiAgICBwaG9uZU51bWJlcjogJzAxMC04NzY1LTQzMjEnLFxyXG4gICAgbWludXM6ICcxNScsXHJcbiAgICByZWFzb246ICdMYXRlIHRvIGNsYXNzJyxcclxuICAgIHJlZ2lzdHJhdGlvbkRhdGU6ICcyMDI0LTAxLTAyJyxcclxuICAgIGlzQ2hlY2tlZDogZmFsc2UsXHJcbiAgICBzZXRSZWFzb246ICgpID0+IHt9LFxyXG4gICAgc2V0SXNDaGVja2VkOiAoKSA9PiB7fSxcclxuICAgIGlzRWRpdDogZmFsc2UsXHJcbiAgfSxcclxuICAvLyAuLi4g64KY66i47KeAIOuNsOydtO2EsCDrj5nsnbztlZjqsowg7IiY7KCVXHJcbiAge1xyXG4gICAgaW5kZXg6IDEwLFxyXG4gICAgbmFtZTogJ+ydtOuztO2YhCcsXHJcbiAgICBzdHVkZW50SWQ6ICc2NTQzMjEnLFxyXG4gICAgcGhvbmVOdW1iZXI6ICcwMTAtODc2NS00MzIxJyxcclxuICAgIG1pbnVzOiAnMTUnLFxyXG4gICAgcmVhc29uOiAnTGF0ZSB0byBjbGFzcycsXHJcbiAgICByZWdpc3RyYXRpb25EYXRlOiAnMjAyNC0wMS0wMicsXHJcbiAgICBpc0NoZWNrZWQ6IGZhbHNlLFxyXG4gICAgc2V0UmVhc29uOiAoKSA9PiB7fSxcclxuICAgIHNldElzQ2hlY2tlZDogKCkgPT4ge30sXHJcbiAgICBpc0VkaXQ6IGZhbHNlLFxyXG4gIH0sXHJcbl07XHJcbiJdLCJuYW1lcyI6WyJtb2NrQmxhY2tMaXN0IiwiaW5kZXgiLCJuYW1lIiwic3R1ZGVudElkIiwicGhvbmVOdW1iZXIiLCJtaW51cyIsInJlYXNvbiIsInJlZ2lzdHJhdGlvbkRhdGUiLCJpc0NoZWNrZWQiLCJzZXRSZWFzb24iLCJzZXRJc0NoZWNrZWQiLCJpc0VkaXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/dashboard/StudentManagement/BlackList/mockData.tsx\n"));

/***/ })

});